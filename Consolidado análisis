{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/A01793509/Equipo_44/blob/main/Consolidado%20an%C3%A1lisis\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "\n",
        "---\n",
        "\n",
        "\n",
        "🚀 **Avance 2. Ingeniería de características**: Crear nuevas características para mejorar el rendimiento de los modelos. Mitigar el riesgo de características sesgadas y acelerar la convergencia de algunos algoritmos.\n",
        "\n",
        "📑 **Asignatura:** Proyecto Integrador\n",
        "\n",
        "📘 **Proyecto:** LunchForecast AI: Optimizador de reservas de almuerzos empresariales basado en inteligencia artificial.\n",
        "\n",
        "📚 **Equipo:** 44\n",
        "\n",
        "🧑 **Alumnos:**\n",
        "> Alberto José García Porras (Matrícula No. **A01793509**)\n",
        "\n",
        ">  Erick Johan Najera Olivero (Matrícula No. **A01793506**)\n",
        "\n",
        ">  Carlos Julio León Caicedo (Matrícula No. **A01793947**)\n",
        "\n",
        "👩 **Profesores**:\n",
        "> Dra. Grettel Barceló Alonso\n",
        "\n",
        "> Dr. Luis Eduardo Falcón Morales\n",
        "\n",
        "> Dr. Guillermo Mota\n",
        "\n",
        "📅 Mayo 12 del 2024\n",
        "\n",
        "---"
      ],
      "metadata": {
        "id": "Ke0Gq-4fd4AY"
      }
    },
    {
      "cell_type": "code",
      "execution_count": 29,
      "metadata": {
        "id": "Aw3BisoShw_J"
      },
      "outputs": [],
      "source": [
        "#Importamos las librerías que utilizaremos para la ejecución de la actividad\n",
        "import pandas as pd\n",
        "import matplotlib.pyplot as plt\n",
        "import matplotlib.image as mpimg\n",
        "import seaborn as sns\n",
        "import math\n",
        "import numpy as np\n",
        "import warnings\n",
        "from sklearn.preprocessing import StandardScaler\n",
        "from sklearn.cluster import KMeans\n",
        "from scipy.stats import boxcox\n",
        "from statsmodels.tsa.statespace.sarimax import SARIMAX\n",
        "from statsmodels.tsa.stattools import adfuller\n",
        "from statsmodels.tsa.stattools import kpss\n",
        "from statsmodels.graphics.tsaplots import plot_acf, plot_pacf\n",
        "from statsmodels.tsa.seasonal import seasonal_decompose"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "---\n",
        "##👣**Obtener Datos**: Cargamos el archivo CSV con la información del consumo del casino desde enero del 2021 hasta marzo del 2024.\n",
        "---"
      ],
      "metadata": {
        "id": "68iKces5syeB"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "dfCasinoConsumo = pd.read_csv(\"DatosConsumoCasino.csv\",sep=\";\")\n",
        "dfCasinoConsumoOriginal = dfCasinoConsumo\n",
        "dfCasinoConsumo.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 243
        },
        "id": "wAWaZEYkiTcQ",
        "outputId": "a338177f-c42b-4ab0-89fe-8710034d7036"
      },
      "execution_count": 30,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "   Consecutivo  IdProducto  cod lector  Cod comedor  Identificacion persona  \\\n",
              "0       825979         2.0           0         1001                  100001   \n",
              "1       825980         2.0           0         1001                  100002   \n",
              "2       825981         2.0           0         1001                  100003   \n",
              "3       825982         2.0           1         1001                  100004   \n",
              "4       825983         2.0           0         1001                  100005   \n",
              "\n",
              "  Fecha Consumo   Detalle  Nro empleados   Tipo Empleado Nivel  \\\n",
              "0     3/01/2021  ALMUERZO           3486       Operativo  OPER   \n",
              "1     3/01/2021  ALMUERZO           3486  Administrativo  ANAL   \n",
              "2     3/01/2021  ALMUERZO           3486       Operativo  OPER   \n",
              "3     3/01/2021  ALMUERZO           3486       Operativo  OPER   \n",
              "4     3/01/2021  ALMUERZO           3486  Administrativo  OPER   \n",
              "\n",
              "   Porcentaje apoyo  Invitado  Ing x planta  \n",
              "0                 0         0             1  \n",
              "1                90         0             1  \n",
              "2                 0         0             1  \n",
              "3                90         0             1  \n",
              "4                 0         0             1  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-b25e5442-9b51-421d-b3c9-496a2a91a31d\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Consecutivo</th>\n",
              "      <th>IdProducto</th>\n",
              "      <th>cod lector</th>\n",
              "      <th>Cod comedor</th>\n",
              "      <th>Identificacion persona</th>\n",
              "      <th>Fecha Consumo</th>\n",
              "      <th>Detalle</th>\n",
              "      <th>Nro empleados</th>\n",
              "      <th>Tipo Empleado</th>\n",
              "      <th>Nivel</th>\n",
              "      <th>Porcentaje apoyo</th>\n",
              "      <th>Invitado</th>\n",
              "      <th>Ing x planta</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>825979</td>\n",
              "      <td>2.0</td>\n",
              "      <td>0</td>\n",
              "      <td>1001</td>\n",
              "      <td>100001</td>\n",
              "      <td>3/01/2021</td>\n",
              "      <td>ALMUERZO</td>\n",
              "      <td>3486</td>\n",
              "      <td>Operativo</td>\n",
              "      <td>OPER</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>825980</td>\n",
              "      <td>2.0</td>\n",
              "      <td>0</td>\n",
              "      <td>1001</td>\n",
              "      <td>100002</td>\n",
              "      <td>3/01/2021</td>\n",
              "      <td>ALMUERZO</td>\n",
              "      <td>3486</td>\n",
              "      <td>Administrativo</td>\n",
              "      <td>ANAL</td>\n",
              "      <td>90</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>825981</td>\n",
              "      <td>2.0</td>\n",
              "      <td>0</td>\n",
              "      <td>1001</td>\n",
              "      <td>100003</td>\n",
              "      <td>3/01/2021</td>\n",
              "      <td>ALMUERZO</td>\n",
              "      <td>3486</td>\n",
              "      <td>Operativo</td>\n",
              "      <td>OPER</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>825982</td>\n",
              "      <td>2.0</td>\n",
              "      <td>1</td>\n",
              "      <td>1001</td>\n",
              "      <td>100004</td>\n",
              "      <td>3/01/2021</td>\n",
              "      <td>ALMUERZO</td>\n",
              "      <td>3486</td>\n",
              "      <td>Operativo</td>\n",
              "      <td>OPER</td>\n",
              "      <td>90</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>825983</td>\n",
              "      <td>2.0</td>\n",
              "      <td>0</td>\n",
              "      <td>1001</td>\n",
              "      <td>100005</td>\n",
              "      <td>3/01/2021</td>\n",
              "      <td>ALMUERZO</td>\n",
              "      <td>3486</td>\n",
              "      <td>Administrativo</td>\n",
              "      <td>OPER</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b25e5442-9b51-421d-b3c9-496a2a91a31d')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-b25e5442-9b51-421d-b3c9-496a2a91a31d button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-b25e5442-9b51-421d-b3c9-496a2a91a31d');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-a579b4f8-fa74-413a-88b7-2fd5d054aa07\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-a579b4f8-fa74-413a-88b7-2fd5d054aa07')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-a579b4f8-fa74-413a-88b7-2fd5d054aa07 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "dfCasinoConsumo"
            }
          },
          "metadata": {},
          "execution_count": 30
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "print(\"**********************************************\")\n",
        "print(f\"Se encontraron {len(dfCasinoConsumo):,.2f} registros:\")\n",
        "print(\"**********************************************\")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "ACFyKM3zzP1l",
        "outputId": "acd2829e-8d58-44cc-8de3-a40354e2a6a3"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "**********************************************\n",
            "Se encontraron 884,615.00 registros:\n",
            "**********************************************\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "---\n",
        "###👣**Ingeniería de caracteristicas:** Realizaremos extracción y transformación de las variables en el conjunto de datos preparándolas para las fases de creación, entrenamiento y pruebas del modelo. Para ello, abordaremos esta actividad desde dos frentes:\n",
        "1. Aplicar operaciones de conversión y transformación de los datos, generando variables útiles para el aprendizaje automático.\n",
        "2. Ejecutar operaciones para la selección adecuada de las variables, con el fin de optimizar el uso de recursos y reducir la complejidad del modelo.\n",
        "---"
      ],
      "metadata": {
        "id": "gt-O6-hMsfK_"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "---\n",
        "<center> ⏭ Operaciones de conversión y transformación de los datos</center>\n",
        "\n",
        "---"
      ],
      "metadata": {
        "id": "hi0nXL-gP_FU"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "---\n",
        "#####☝ Teniendo en cuenta el análisis realizado en la fase de exploración de los datos, procederemos a eliminar las columnas que consideramos irrelevantes para la variable objetivo a predecir.\n",
        "---\n"
      ],
      "metadata": {
        "id": "sZzYiHtil4_I"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "#Listamos las columnas del dataframe para identificar los nombres y proceder con el borrado\n",
        "dfCasinoConsumo.info()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "f7Iw_Y8vKVjE",
        "outputId": "bac00071-fc57-4474-afd3-41a4ebbbd94c"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "RangeIndex: 884615 entries, 0 to 884614\n",
            "Data columns (total 13 columns):\n",
            " #   Column                  Non-Null Count   Dtype  \n",
            "---  ------                  --------------   -----  \n",
            " 0   Consecutivo             884615 non-null  int64  \n",
            " 1   IdProducto              836829 non-null  float64\n",
            " 2   cod lector              884615 non-null  int64  \n",
            " 3   Cod comedor             884615 non-null  int64  \n",
            " 4   Identificacion persona  884615 non-null  int64  \n",
            " 5   Fecha Consumo           884615 non-null  object \n",
            " 6   Detalle                 884615 non-null  object \n",
            " 7   Nro empleados           884615 non-null  int64  \n",
            " 8   Tipo Empleado           884615 non-null  object \n",
            " 9   Nivel                   884615 non-null  object \n",
            " 10  Porcentaje apoyo        884615 non-null  int64  \n",
            " 11  Invitado                884615 non-null  int64  \n",
            " 12  Ing x planta            884615 non-null  int64  \n",
            "dtypes: float64(1), int64(8), object(4)\n",
            "memory usage: 87.7+ MB\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Eliminamos las columnas que no consideramos relevantes según hallazgos en la fase de exploración\n",
        "dfCasinoConsumo=dfCasinoConsumo.drop(columns=['Consecutivo', 'IdProducto', 'cod lector', 'Cod comedor', 'Identificacion persona', 'Invitado','Ing x planta'])\n",
        "dfCasinoConsumo.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 206
        },
        "id": "iMtnlJLxsPim",
        "outputId": "36dea301-626e-41f5-81e8-89dc2064b911"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "  Fecha Consumo   Detalle  Nro empleados   Tipo Empleado Nivel  \\\n",
              "0    2021-01-03  ALMUERZO           3486       Operativo  OPER   \n",
              "1    2021-01-03  ALMUERZO           3486  Administrativo  ANAL   \n",
              "2    2021-01-03  ALMUERZO           3486       Operativo  OPER   \n",
              "3    2021-01-03  ALMUERZO           3486       Operativo  OPER   \n",
              "4    2021-01-03  ALMUERZO           3486  Administrativo  OPER   \n",
              "\n",
              "   Porcentaje apoyo  \n",
              "0                 0  \n",
              "1                90  \n",
              "2                 0  \n",
              "3                90  \n",
              "4                 0  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-8fbac296-72f4-448d-8b05-b1b4a5f26dba\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Fecha Consumo</th>\n",
              "      <th>Detalle</th>\n",
              "      <th>Nro empleados</th>\n",
              "      <th>Tipo Empleado</th>\n",
              "      <th>Nivel</th>\n",
              "      <th>Porcentaje apoyo</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>2021-01-03</td>\n",
              "      <td>ALMUERZO</td>\n",
              "      <td>3486</td>\n",
              "      <td>Operativo</td>\n",
              "      <td>OPER</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2021-01-03</td>\n",
              "      <td>ALMUERZO</td>\n",
              "      <td>3486</td>\n",
              "      <td>Administrativo</td>\n",
              "      <td>ANAL</td>\n",
              "      <td>90</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>2021-01-03</td>\n",
              "      <td>ALMUERZO</td>\n",
              "      <td>3486</td>\n",
              "      <td>Operativo</td>\n",
              "      <td>OPER</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>2021-01-03</td>\n",
              "      <td>ALMUERZO</td>\n",
              "      <td>3486</td>\n",
              "      <td>Operativo</td>\n",
              "      <td>OPER</td>\n",
              "      <td>90</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>2021-01-03</td>\n",
              "      <td>ALMUERZO</td>\n",
              "      <td>3486</td>\n",
              "      <td>Administrativo</td>\n",
              "      <td>OPER</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-8fbac296-72f4-448d-8b05-b1b4a5f26dba')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-8fbac296-72f4-448d-8b05-b1b4a5f26dba button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-8fbac296-72f4-448d-8b05-b1b4a5f26dba');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-31a06ea6-b765-4d0b-8dd1-96ca202d0efd\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-31a06ea6-b765-4d0b-8dd1-96ca202d0efd')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-31a06ea6-b765-4d0b-8dd1-96ca202d0efd button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "dfCasinoConsumo"
            }
          },
          "metadata": {},
          "execution_count": 65
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "---\n",
        "#####☝En la fase de exploración notamos que existían más de 800,000 registros en el conjunto de datos, pero teniendo en cuenta el objetivo del modelo a desarrollar, basado en predecir el número de almuerzos a solicitar al proveedor de alimentación, eliminaremos aquellos registros que no serán relevantes para nuestro proyecto, en este caso, todo lo que sea diferente a '**ALMUERZO**' en el campo '**DETALLE**'.\n",
        "---"
      ],
      "metadata": {
        "id": "5JdQ2c4Zf9yb"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "print(\"****************************************************\")\n",
        "print(f\"A nivel general, se cuenta con {len(dfCasinoConsumo):,.2f} registros.\")\n",
        "print(\"****************************************************\")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "2zmWObNYWg9S",
        "outputId": "dd01129f-b82b-4334-8277-8e59ff1c2e83"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "****************************************************\n",
            "A nivel general, se cuenta con 884,615.00 registros.\n",
            "****************************************************\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "dfCasinoConsumo"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 423
        },
        "id": "-pEPmwfysCdp",
        "outputId": "86110e7b-e1c6-4f96-d6dd-39d9653be67a"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "       Fecha Consumo   Detalle  Nro empleados   Tipo Empleado Nivel  \\\n",
              "0         2021-01-03  ALMUERZO           3486       Operativo  OPER   \n",
              "1         2021-01-03  ALMUERZO           3486  Administrativo  ANAL   \n",
              "2         2021-01-03  ALMUERZO           3486       Operativo  OPER   \n",
              "3         2021-01-03  ALMUERZO           3486       Operativo  OPER   \n",
              "4         2021-01-03  ALMUERZO           3486  Administrativo  OPER   \n",
              "...              ...       ...            ...             ...   ...   \n",
              "884610    2024-03-21  DESAYUNO           3837       Operativo  AUXI   \n",
              "884611    2024-03-22  DESAYUNO           3836       Operativo  AUXI   \n",
              "884612    2024-03-23  DESAYUNO           3836       Operativo  AUXI   \n",
              "884613    2024-03-26  DESAYUNO           3834       Operativo  AUXI   \n",
              "884614    2024-03-27  DESAYUNO           3833       Operativo  AUXI   \n",
              "\n",
              "        Porcentaje apoyo  \n",
              "0                      0  \n",
              "1                     90  \n",
              "2                      0  \n",
              "3                     90  \n",
              "4                      0  \n",
              "...                  ...  \n",
              "884610                90  \n",
              "884611                90  \n",
              "884612                90  \n",
              "884613                90  \n",
              "884614                90  \n",
              "\n",
              "[884615 rows x 6 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-1cae8d05-bc43-45f3-999d-a0cc9782cdb7\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Fecha Consumo</th>\n",
              "      <th>Detalle</th>\n",
              "      <th>Nro empleados</th>\n",
              "      <th>Tipo Empleado</th>\n",
              "      <th>Nivel</th>\n",
              "      <th>Porcentaje apoyo</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>2021-01-03</td>\n",
              "      <td>ALMUERZO</td>\n",
              "      <td>3486</td>\n",
              "      <td>Operativo</td>\n",
              "      <td>OPER</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2021-01-03</td>\n",
              "      <td>ALMUERZO</td>\n",
              "      <td>3486</td>\n",
              "      <td>Administrativo</td>\n",
              "      <td>ANAL</td>\n",
              "      <td>90</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>2021-01-03</td>\n",
              "      <td>ALMUERZO</td>\n",
              "      <td>3486</td>\n",
              "      <td>Operativo</td>\n",
              "      <td>OPER</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>2021-01-03</td>\n",
              "      <td>ALMUERZO</td>\n",
              "      <td>3486</td>\n",
              "      <td>Operativo</td>\n",
              "      <td>OPER</td>\n",
              "      <td>90</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>2021-01-03</td>\n",
              "      <td>ALMUERZO</td>\n",
              "      <td>3486</td>\n",
              "      <td>Administrativo</td>\n",
              "      <td>OPER</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>884610</th>\n",
              "      <td>2024-03-21</td>\n",
              "      <td>DESAYUNO</td>\n",
              "      <td>3837</td>\n",
              "      <td>Operativo</td>\n",
              "      <td>AUXI</td>\n",
              "      <td>90</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>884611</th>\n",
              "      <td>2024-03-22</td>\n",
              "      <td>DESAYUNO</td>\n",
              "      <td>3836</td>\n",
              "      <td>Operativo</td>\n",
              "      <td>AUXI</td>\n",
              "      <td>90</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>884612</th>\n",
              "      <td>2024-03-23</td>\n",
              "      <td>DESAYUNO</td>\n",
              "      <td>3836</td>\n",
              "      <td>Operativo</td>\n",
              "      <td>AUXI</td>\n",
              "      <td>90</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>884613</th>\n",
              "      <td>2024-03-26</td>\n",
              "      <td>DESAYUNO</td>\n",
              "      <td>3834</td>\n",
              "      <td>Operativo</td>\n",
              "      <td>AUXI</td>\n",
              "      <td>90</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>884614</th>\n",
              "      <td>2024-03-27</td>\n",
              "      <td>DESAYUNO</td>\n",
              "      <td>3833</td>\n",
              "      <td>Operativo</td>\n",
              "      <td>AUXI</td>\n",
              "      <td>90</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>884615 rows × 6 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-1cae8d05-bc43-45f3-999d-a0cc9782cdb7')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-1cae8d05-bc43-45f3-999d-a0cc9782cdb7 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-1cae8d05-bc43-45f3-999d-a0cc9782cdb7');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-20177195-a78e-47da-8013-f0e36a036450\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-20177195-a78e-47da-8013-f0e36a036450')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-20177195-a78e-47da-8013-f0e36a036450 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "  <div id=\"id_7d174f70-7594-4a12-9d95-c4e1fda5840a\">\n",
              "    <style>\n",
              "      .colab-df-generate {\n",
              "        background-color: #E8F0FE;\n",
              "        border: none;\n",
              "        border-radius: 50%;\n",
              "        cursor: pointer;\n",
              "        display: none;\n",
              "        fill: #1967D2;\n",
              "        height: 32px;\n",
              "        padding: 0 0 0 0;\n",
              "        width: 32px;\n",
              "      }\n",
              "\n",
              "      .colab-df-generate:hover {\n",
              "        background-color: #E2EBFA;\n",
              "        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "        fill: #174EA6;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate {\n",
              "        background-color: #3B4455;\n",
              "        fill: #D2E3FC;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate:hover {\n",
              "        background-color: #434B5C;\n",
              "        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "        fill: #FFFFFF;\n",
              "      }\n",
              "    </style>\n",
              "    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('dfCasinoConsumo')\"\n",
              "            title=\"Generate code using this dataframe.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "    <script>\n",
              "      (() => {\n",
              "      const buttonEl =\n",
              "        document.querySelector('#id_7d174f70-7594-4a12-9d95-c4e1fda5840a button.colab-df-generate');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      buttonEl.onclick = () => {\n",
              "        google.colab.notebook.generateWithVariable('dfCasinoConsumo');\n",
              "      }\n",
              "      })();\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "dfCasinoConsumo"
            }
          },
          "metadata": {},
          "execution_count": 96
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#En el análisis, habíamos notado que existían valores de 'ALMUERZO' en minúsculas en el campo 'DETALLE'\n",
        "#Por lo anterior, procederemos a pasar a mayúsculas el contenido de la columna antes de proceder con el borrado\n",
        "dfCasinoConsumo['Detalle'] = dfCasinoConsumo['Detalle'].str.upper()\n",
        "\n",
        "#Filtramos el dataFrame para conservar solo las filas donde 'DETALLE' es igual a 'ALMUERZO' y lo guardamos en un\n",
        "#nuevo dataframe para evitar SettingWithCopyWarning\n",
        "dfCasinoAlmuerzos = dfCasinoConsumo[dfCasinoConsumo['Detalle'] == 'ALMUERZO'].copy()"
      ],
      "metadata": {
        "id": "dJFr6jJzWvu0"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "print(\"**************************************************************\")\n",
        "print(f\"Contamos con {len(dfCasinoAlmuerzos):,.2f} registros correspondientes a ALMUERZO.\")\n",
        "print(\"**************************************************************\")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "PiCjhpASX29M",
        "outputId": "0478e197-8e64-4077-dadb-a2704661f761"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "**************************************************************\n",
            "Contamos con 523,885.00 registros correspondientes a ALMUERZO.\n",
            "**************************************************************\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "---\n",
        "#####☝En la fase de exploración habíamos encontrado que la columna '**NIVEL**' contenía un registros con valor '**N/D**', teniendo en cuenta que procederemos con el One-Hot Encoder para codificar las variables categóricas, eliminaremos este valor del dataframe antes de realizar la codificación.\n",
        "---"
      ],
      "metadata": {
        "id": "dacB1yCyhx6G"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "#Creamos un nuevo dataframe para eliminar la fila mencionada\n",
        "dfAlmuerzosDepurados = dfCasinoAlmuerzos.drop(dfCasinoAlmuerzos[dfCasinoAlmuerzos['Nivel'] == '#N/D'].index)"
      ],
      "metadata": {
        "id": "nRklfbmLIq-i"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#Procedemos a realizar la codificación de las columnas categóricas\n",
        "dfCasinoAlmuerzosCodificado = pd.get_dummies(dfAlmuerzosDepurados, columns=['Tipo Empleado', 'Nivel', 'Porcentaje apoyo'])\n",
        "dfCasinoAlmuerzosCodificado.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 359
        },
        "id": "tm0Gs8IuCtPv",
        "outputId": "26151179-6977-4b85-aad5-32142bf97648"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "  Fecha Consumo   Detalle  Nro empleados  Tipo Empleado_Administrativo  \\\n",
              "0    2021-01-03  ALMUERZO           3486                         False   \n",
              "1    2021-01-03  ALMUERZO           3486                          True   \n",
              "2    2021-01-03  ALMUERZO           3486                         False   \n",
              "3    2021-01-03  ALMUERZO           3486                         False   \n",
              "4    2021-01-03  ALMUERZO           3486                          True   \n",
              "\n",
              "   Tipo Empleado_Aprendices  Tipo Empleado_Operativo  Nivel_ANAL  Nivel_ASIS  \\\n",
              "0                     False                     True       False       False   \n",
              "1                     False                    False        True       False   \n",
              "2                     False                     True       False       False   \n",
              "3                     False                     True       False       False   \n",
              "4                     False                    False       False       False   \n",
              "\n",
              "   Nivel_AUXI  Nivel_COOR  ...  Nivel_GERE  Nivel_JEFE  Nivel_OPER  \\\n",
              "0       False       False  ...       False       False        True   \n",
              "1       False       False  ...       False       False       False   \n",
              "2       False       False  ...       False       False        True   \n",
              "3       False       False  ...       False       False        True   \n",
              "4       False       False  ...       False       False        True   \n",
              "\n",
              "   Nivel_SENA  Nivel_VICE  Nivel_coor  Porcentaje apoyo_0  \\\n",
              "0       False       False       False                True   \n",
              "1       False       False       False               False   \n",
              "2       False       False       False                True   \n",
              "3       False       False       False               False   \n",
              "4       False       False       False                True   \n",
              "\n",
              "   Porcentaje apoyo_30  Porcentaje apoyo_90  Porcentaje apoyo_100  \n",
              "0                False                False                 False  \n",
              "1                False                 True                 False  \n",
              "2                False                False                 False  \n",
              "3                False                 True                 False  \n",
              "4                False                False                 False  \n",
              "\n",
              "[5 rows x 21 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-d057cff4-3807-4408-8323-f8ed32896ad9\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Fecha Consumo</th>\n",
              "      <th>Detalle</th>\n",
              "      <th>Nro empleados</th>\n",
              "      <th>Tipo Empleado_Administrativo</th>\n",
              "      <th>Tipo Empleado_Aprendices</th>\n",
              "      <th>Tipo Empleado_Operativo</th>\n",
              "      <th>Nivel_ANAL</th>\n",
              "      <th>Nivel_ASIS</th>\n",
              "      <th>Nivel_AUXI</th>\n",
              "      <th>Nivel_COOR</th>\n",
              "      <th>...</th>\n",
              "      <th>Nivel_GERE</th>\n",
              "      <th>Nivel_JEFE</th>\n",
              "      <th>Nivel_OPER</th>\n",
              "      <th>Nivel_SENA</th>\n",
              "      <th>Nivel_VICE</th>\n",
              "      <th>Nivel_coor</th>\n",
              "      <th>Porcentaje apoyo_0</th>\n",
              "      <th>Porcentaje apoyo_30</th>\n",
              "      <th>Porcentaje apoyo_90</th>\n",
              "      <th>Porcentaje apoyo_100</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>2021-01-03</td>\n",
              "      <td>ALMUERZO</td>\n",
              "      <td>3486</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>...</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2021-01-03</td>\n",
              "      <td>ALMUERZO</td>\n",
              "      <td>3486</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>...</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>2021-01-03</td>\n",
              "      <td>ALMUERZO</td>\n",
              "      <td>3486</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>...</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>2021-01-03</td>\n",
              "      <td>ALMUERZO</td>\n",
              "      <td>3486</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>...</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>2021-01-03</td>\n",
              "      <td>ALMUERZO</td>\n",
              "      <td>3486</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>...</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>5 rows × 21 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d057cff4-3807-4408-8323-f8ed32896ad9')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-d057cff4-3807-4408-8323-f8ed32896ad9 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-d057cff4-3807-4408-8323-f8ed32896ad9');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-94bb3dc2-067d-4479-915f-be420a748dd7\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-94bb3dc2-067d-4479-915f-be420a748dd7')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-94bb3dc2-067d-4479-915f-be420a748dd7 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "dfCasinoAlmuerzosCodificado"
            }
          },
          "metadata": {},
          "execution_count": 67
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Para que el modelo que desarrollaremos más adelante funcione de una mejor manera,\n",
        "#procederemos a convertir los valores booleanos a números.\n",
        "#Recorremos todas las columnas y al identificar una booleana, la convertiremos en número.\n",
        "for col in dfCasinoAlmuerzosCodificado.columns:\n",
        "    if dfCasinoAlmuerzosCodificado[col].dtype == bool:\n",
        "        dfCasinoAlmuerzosCodificado[col] = dfCasinoAlmuerzosCodificado[col].astype(int)\n",
        "\n",
        "dfCasinoAlmuerzosCodificado.head(5)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 359
        },
        "id": "UQeOor-UjX0c",
        "outputId": "8e5baaf7-8f44-4c9d-8b17-e30d96553068"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "  Fecha Consumo   Detalle  Nro empleados  Tipo Empleado_Administrativo  \\\n",
              "0    2021-01-03  ALMUERZO           3486                             0   \n",
              "1    2021-01-03  ALMUERZO           3486                             1   \n",
              "2    2021-01-03  ALMUERZO           3486                             0   \n",
              "3    2021-01-03  ALMUERZO           3486                             0   \n",
              "4    2021-01-03  ALMUERZO           3486                             1   \n",
              "\n",
              "   Tipo Empleado_Aprendices  Tipo Empleado_Operativo  Nivel_ANAL  Nivel_ASIS  \\\n",
              "0                         0                        1           0           0   \n",
              "1                         0                        0           1           0   \n",
              "2                         0                        1           0           0   \n",
              "3                         0                        1           0           0   \n",
              "4                         0                        0           0           0   \n",
              "\n",
              "   Nivel_AUXI  Nivel_COOR  ...  Nivel_GERE  Nivel_JEFE  Nivel_OPER  \\\n",
              "0           0           0  ...           0           0           1   \n",
              "1           0           0  ...           0           0           0   \n",
              "2           0           0  ...           0           0           1   \n",
              "3           0           0  ...           0           0           1   \n",
              "4           0           0  ...           0           0           1   \n",
              "\n",
              "   Nivel_SENA  Nivel_VICE  Nivel_coor  Porcentaje apoyo_0  \\\n",
              "0           0           0           0                   1   \n",
              "1           0           0           0                   0   \n",
              "2           0           0           0                   1   \n",
              "3           0           0           0                   0   \n",
              "4           0           0           0                   1   \n",
              "\n",
              "   Porcentaje apoyo_30  Porcentaje apoyo_90  Porcentaje apoyo_100  \n",
              "0                    0                    0                     0  \n",
              "1                    0                    1                     0  \n",
              "2                    0                    0                     0  \n",
              "3                    0                    1                     0  \n",
              "4                    0                    0                     0  \n",
              "\n",
              "[5 rows x 21 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-0f7aef61-3874-43a7-854b-559ba645ea70\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Fecha Consumo</th>\n",
              "      <th>Detalle</th>\n",
              "      <th>Nro empleados</th>\n",
              "      <th>Tipo Empleado_Administrativo</th>\n",
              "      <th>Tipo Empleado_Aprendices</th>\n",
              "      <th>Tipo Empleado_Operativo</th>\n",
              "      <th>Nivel_ANAL</th>\n",
              "      <th>Nivel_ASIS</th>\n",
              "      <th>Nivel_AUXI</th>\n",
              "      <th>Nivel_COOR</th>\n",
              "      <th>...</th>\n",
              "      <th>Nivel_GERE</th>\n",
              "      <th>Nivel_JEFE</th>\n",
              "      <th>Nivel_OPER</th>\n",
              "      <th>Nivel_SENA</th>\n",
              "      <th>Nivel_VICE</th>\n",
              "      <th>Nivel_coor</th>\n",
              "      <th>Porcentaje apoyo_0</th>\n",
              "      <th>Porcentaje apoyo_30</th>\n",
              "      <th>Porcentaje apoyo_90</th>\n",
              "      <th>Porcentaje apoyo_100</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>2021-01-03</td>\n",
              "      <td>ALMUERZO</td>\n",
              "      <td>3486</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2021-01-03</td>\n",
              "      <td>ALMUERZO</td>\n",
              "      <td>3486</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>2021-01-03</td>\n",
              "      <td>ALMUERZO</td>\n",
              "      <td>3486</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>2021-01-03</td>\n",
              "      <td>ALMUERZO</td>\n",
              "      <td>3486</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>2021-01-03</td>\n",
              "      <td>ALMUERZO</td>\n",
              "      <td>3486</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>5 rows × 21 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0f7aef61-3874-43a7-854b-559ba645ea70')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-0f7aef61-3874-43a7-854b-559ba645ea70 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-0f7aef61-3874-43a7-854b-559ba645ea70');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-e3dacc1a-3bf1-4c83-964f-c4e973d2ba77\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-e3dacc1a-3bf1-4c83-964f-c4e973d2ba77')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-e3dacc1a-3bf1-4c83-964f-c4e973d2ba77 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "dfCasinoAlmuerzosCodificado"
            }
          },
          "metadata": {},
          "execution_count": 68
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "---\n",
        "##### 👣 Procederemos a realizar agrupamiento de las variables para realizar un mejor análisis y evaluar la estacionalidad del conjunto de datos.\n",
        "---"
      ],
      "metadata": {
        "id": "zQP8iIuWm7WN"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "#Ajustamos la fecha tipo datetime como preparación para realizar el agrupamiento de los datos\n",
        "dfCasinoAlmuerzosCodificado['Fecha Consumo'] = pd.to_datetime(dfCasinoAlmuerzosCodificado['Fecha Consumo'])\n",
        "\n",
        "#Calculamos la cantidad de almuerzos por fecha y las otras columnas categóricas del dataframe\n",
        "dfCantidad_Almuerzos = dfCasinoAlmuerzosCodificado.groupby(['Fecha Consumo'] + list(dfCasinoAlmuerzosCodificado.columns.difference(['Fecha Consumo', 'Detalle']))).size().reset_index(name='Cantidad_Almuerzos')\n",
        "\n",
        "#Fusionamos el dataframe que venimos trabajando con el dataframe de la cantidad de almuerzos, eliminando posibles registros duplicados\n",
        "dfCasinoAlmuerzosAgrupado = pd.merge(dfCasinoAlmuerzosCodificado, dfCantidad_Almuerzos.drop_duplicates(), on=['Fecha Consumo'] + list(dfCasinoAlmuerzosCodificado.columns.difference(['Fecha Consumo', 'Detalle'])), how='left')\n",
        "\n",
        "dfCasinoAlmuerzosAgrupado"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 634
        },
        "id": "8L8oyJ81C9eZ",
        "outputId": "6dcd42cc-0289-4586-9582-28b6d711f3cc"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "       Fecha Consumo   Detalle  Nro empleados  Tipo Empleado_Administrativo  \\\n",
              "0         2021-01-03  ALMUERZO           3486                             0   \n",
              "1         2021-01-03  ALMUERZO           3486                             1   \n",
              "2         2021-01-03  ALMUERZO           3486                             0   \n",
              "3         2021-01-03  ALMUERZO           3486                             0   \n",
              "4         2021-01-03  ALMUERZO           3486                             1   \n",
              "...              ...       ...            ...                           ...   \n",
              "523879    2024-03-20  ALMUERZO           3839                             1   \n",
              "523880    2024-03-21  ALMUERZO           3837                             1   \n",
              "523881    2024-03-22  ALMUERZO           3836                             1   \n",
              "523882    2024-03-26  ALMUERZO           3834                             1   \n",
              "523883    2024-03-27  ALMUERZO           3833                             1   \n",
              "\n",
              "        Tipo Empleado_Aprendices  Tipo Empleado_Operativo  Nivel_ANAL  \\\n",
              "0                              0                        1           0   \n",
              "1                              0                        0           1   \n",
              "2                              0                        1           0   \n",
              "3                              0                        1           0   \n",
              "4                              0                        0           0   \n",
              "...                          ...                      ...         ...   \n",
              "523879                         0                        0           1   \n",
              "523880                         0                        0           1   \n",
              "523881                         0                        0           1   \n",
              "523882                         0                        0           1   \n",
              "523883                         0                        0           0   \n",
              "\n",
              "        Nivel_ASIS  Nivel_AUXI  Nivel_COOR  ...  Nivel_JEFE  Nivel_OPER  \\\n",
              "0                0           0           0  ...           0           1   \n",
              "1                0           0           0  ...           0           0   \n",
              "2                0           0           0  ...           0           1   \n",
              "3                0           0           0  ...           0           1   \n",
              "4                0           0           0  ...           0           1   \n",
              "...            ...         ...         ...  ...         ...         ...   \n",
              "523879           0           0           0  ...           0           0   \n",
              "523880           0           0           0  ...           0           0   \n",
              "523881           0           0           0  ...           0           0   \n",
              "523882           0           0           0  ...           0           0   \n",
              "523883           0           0           0  ...           0           1   \n",
              "\n",
              "        Nivel_SENA  Nivel_VICE  Nivel_coor  Porcentaje apoyo_0  \\\n",
              "0                0           0           0                   1   \n",
              "1                0           0           0                   0   \n",
              "2                0           0           0                   1   \n",
              "3                0           0           0                   0   \n",
              "4                0           0           0                   1   \n",
              "...            ...         ...         ...                 ...   \n",
              "523879           0           0           0                   0   \n",
              "523880           0           0           0                   0   \n",
              "523881           0           0           0                   0   \n",
              "523882           0           0           0                   0   \n",
              "523883           0           0           0                   0   \n",
              "\n",
              "        Porcentaje apoyo_30  Porcentaje apoyo_90  Porcentaje apoyo_100  \\\n",
              "0                         0                    0                     0   \n",
              "1                         0                    1                     0   \n",
              "2                         0                    0                     0   \n",
              "3                         0                    1                     0   \n",
              "4                         0                    0                     0   \n",
              "...                     ...                  ...                   ...   \n",
              "523879                    1                    0                     0   \n",
              "523880                    1                    0                     0   \n",
              "523881                    1                    0                     0   \n",
              "523882                    1                    0                     0   \n",
              "523883                    0                    1                     0   \n",
              "\n",
              "        Cantidad_Almuerzos  \n",
              "0                       45  \n",
              "1                        3  \n",
              "2                       45  \n",
              "3                       75  \n",
              "4                        6  \n",
              "...                    ...  \n",
              "523879                  47  \n",
              "523880                  49  \n",
              "523881                  40  \n",
              "523882                  33  \n",
              "523883                  42  \n",
              "\n",
              "[523884 rows x 22 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-0b70bdf6-04cf-48a4-b249-c5d008a2d43f\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Fecha Consumo</th>\n",
              "      <th>Detalle</th>\n",
              "      <th>Nro empleados</th>\n",
              "      <th>Tipo Empleado_Administrativo</th>\n",
              "      <th>Tipo Empleado_Aprendices</th>\n",
              "      <th>Tipo Empleado_Operativo</th>\n",
              "      <th>Nivel_ANAL</th>\n",
              "      <th>Nivel_ASIS</th>\n",
              "      <th>Nivel_AUXI</th>\n",
              "      <th>Nivel_COOR</th>\n",
              "      <th>...</th>\n",
              "      <th>Nivel_JEFE</th>\n",
              "      <th>Nivel_OPER</th>\n",
              "      <th>Nivel_SENA</th>\n",
              "      <th>Nivel_VICE</th>\n",
              "      <th>Nivel_coor</th>\n",
              "      <th>Porcentaje apoyo_0</th>\n",
              "      <th>Porcentaje apoyo_30</th>\n",
              "      <th>Porcentaje apoyo_90</th>\n",
              "      <th>Porcentaje apoyo_100</th>\n",
              "      <th>Cantidad_Almuerzos</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>2021-01-03</td>\n",
              "      <td>ALMUERZO</td>\n",
              "      <td>3486</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>45</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2021-01-03</td>\n",
              "      <td>ALMUERZO</td>\n",
              "      <td>3486</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>2021-01-03</td>\n",
              "      <td>ALMUERZO</td>\n",
              "      <td>3486</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>45</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>2021-01-03</td>\n",
              "      <td>ALMUERZO</td>\n",
              "      <td>3486</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>75</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>2021-01-03</td>\n",
              "      <td>ALMUERZO</td>\n",
              "      <td>3486</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>523879</th>\n",
              "      <td>2024-03-20</td>\n",
              "      <td>ALMUERZO</td>\n",
              "      <td>3839</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>47</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>523880</th>\n",
              "      <td>2024-03-21</td>\n",
              "      <td>ALMUERZO</td>\n",
              "      <td>3837</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>49</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>523881</th>\n",
              "      <td>2024-03-22</td>\n",
              "      <td>ALMUERZO</td>\n",
              "      <td>3836</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>40</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>523882</th>\n",
              "      <td>2024-03-26</td>\n",
              "      <td>ALMUERZO</td>\n",
              "      <td>3834</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>33</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>523883</th>\n",
              "      <td>2024-03-27</td>\n",
              "      <td>ALMUERZO</td>\n",
              "      <td>3833</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>42</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>523884 rows × 22 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0b70bdf6-04cf-48a4-b249-c5d008a2d43f')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-0b70bdf6-04cf-48a4-b249-c5d008a2d43f button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-0b70bdf6-04cf-48a4-b249-c5d008a2d43f');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-8c650dc1-db0a-48c9-abe5-5da02e547e87\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-8c650dc1-db0a-48c9-abe5-5da02e547e87')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-8c650dc1-db0a-48c9-abe5-5da02e547e87 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "  <div id=\"id_53d27c70-e7ea-405e-8642-b1fc4ac26335\">\n",
              "    <style>\n",
              "      .colab-df-generate {\n",
              "        background-color: #E8F0FE;\n",
              "        border: none;\n",
              "        border-radius: 50%;\n",
              "        cursor: pointer;\n",
              "        display: none;\n",
              "        fill: #1967D2;\n",
              "        height: 32px;\n",
              "        padding: 0 0 0 0;\n",
              "        width: 32px;\n",
              "      }\n",
              "\n",
              "      .colab-df-generate:hover {\n",
              "        background-color: #E2EBFA;\n",
              "        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "        fill: #174EA6;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate {\n",
              "        background-color: #3B4455;\n",
              "        fill: #D2E3FC;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate:hover {\n",
              "        background-color: #434B5C;\n",
              "        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "        fill: #FFFFFF;\n",
              "      }\n",
              "    </style>\n",
              "    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('dfCasinoAlmuerzosAgrupado')\"\n",
              "            title=\"Generate code using this dataframe.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "    <script>\n",
              "      (() => {\n",
              "      const buttonEl =\n",
              "        document.querySelector('#id_53d27c70-e7ea-405e-8642-b1fc4ac26335 button.colab-df-generate');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      buttonEl.onclick = () => {\n",
              "        google.colab.notebook.generateWithVariable('dfCasinoAlmuerzosAgrupado');\n",
              "      }\n",
              "      })();\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "dfCasinoAlmuerzosAgrupado"
            }
          },
          "metadata": {},
          "execution_count": 69
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "---\n",
        "##### 👣 Una vez agrupados los datos, procederemos a validar si es necesario realizar transformación a la serie temporal, visualmente podemos observar presencia de valores atípicos en la serie y esto puede estar contribuyendo a la falta de homocedasticidad, al no tener una varianza constante se hace necesario identificar si se requiere una trandormacion, por lo tanto, aplicaremos Box-Cox\n",
        "---"
      ],
      "metadata": {
        "id": "N4zCoFDquOvr"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "dfCasinoAlmuerzosCodificado"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 634
        },
        "id": "wuEvhx2YNiI3",
        "outputId": "d7832f6f-0f01-4e46-d7b3-a74c282ab43a"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "       Fecha Consumo   Detalle  Nro empleados  Tipo Empleado_Administrativo  \\\n",
              "0         2021-01-03  ALMUERZO           3486                             0   \n",
              "1         2021-01-03  ALMUERZO           3486                             1   \n",
              "2         2021-01-03  ALMUERZO           3486                             0   \n",
              "3         2021-01-03  ALMUERZO           3486                             0   \n",
              "4         2021-01-03  ALMUERZO           3486                             1   \n",
              "...              ...       ...            ...                           ...   \n",
              "875441    2024-03-20  ALMUERZO           3839                             1   \n",
              "875442    2024-03-21  ALMUERZO           3837                             1   \n",
              "875443    2024-03-22  ALMUERZO           3836                             1   \n",
              "875444    2024-03-26  ALMUERZO           3834                             1   \n",
              "875445    2024-03-27  ALMUERZO           3833                             1   \n",
              "\n",
              "        Tipo Empleado_Aprendices  Tipo Empleado_Operativo  Nivel_ANAL  \\\n",
              "0                              0                        1           0   \n",
              "1                              0                        0           1   \n",
              "2                              0                        1           0   \n",
              "3                              0                        1           0   \n",
              "4                              0                        0           0   \n",
              "...                          ...                      ...         ...   \n",
              "875441                         0                        0           1   \n",
              "875442                         0                        0           1   \n",
              "875443                         0                        0           1   \n",
              "875444                         0                        0           1   \n",
              "875445                         0                        0           0   \n",
              "\n",
              "        Nivel_ASIS  Nivel_AUXI  Nivel_COOR  ...  Nivel_GERE  Nivel_JEFE  \\\n",
              "0                0           0           0  ...           0           0   \n",
              "1                0           0           0  ...           0           0   \n",
              "2                0           0           0  ...           0           0   \n",
              "3                0           0           0  ...           0           0   \n",
              "4                0           0           0  ...           0           0   \n",
              "...            ...         ...         ...  ...         ...         ...   \n",
              "875441           0           0           0  ...           0           0   \n",
              "875442           0           0           0  ...           0           0   \n",
              "875443           0           0           0  ...           0           0   \n",
              "875444           0           0           0  ...           0           0   \n",
              "875445           0           0           0  ...           0           0   \n",
              "\n",
              "        Nivel_OPER  Nivel_SENA  Nivel_VICE  Nivel_coor  Porcentaje apoyo_0  \\\n",
              "0                1           0           0           0                   1   \n",
              "1                0           0           0           0                   0   \n",
              "2                1           0           0           0                   1   \n",
              "3                1           0           0           0                   0   \n",
              "4                1           0           0           0                   1   \n",
              "...            ...         ...         ...         ...                 ...   \n",
              "875441           0           0           0           0                   0   \n",
              "875442           0           0           0           0                   0   \n",
              "875443           0           0           0           0                   0   \n",
              "875444           0           0           0           0                   0   \n",
              "875445           1           0           0           0                   0   \n",
              "\n",
              "        Porcentaje apoyo_30  Porcentaje apoyo_90  Porcentaje apoyo_100  \n",
              "0                         0                    0                     0  \n",
              "1                         0                    1                     0  \n",
              "2                         0                    0                     0  \n",
              "3                         0                    1                     0  \n",
              "4                         0                    0                     0  \n",
              "...                     ...                  ...                   ...  \n",
              "875441                    1                    0                     0  \n",
              "875442                    1                    0                     0  \n",
              "875443                    1                    0                     0  \n",
              "875444                    1                    0                     0  \n",
              "875445                    0                    1                     0  \n",
              "\n",
              "[523884 rows x 21 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-c5419eea-eaa6-418b-8734-fc86c29882b4\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Fecha Consumo</th>\n",
              "      <th>Detalle</th>\n",
              "      <th>Nro empleados</th>\n",
              "      <th>Tipo Empleado_Administrativo</th>\n",
              "      <th>Tipo Empleado_Aprendices</th>\n",
              "      <th>Tipo Empleado_Operativo</th>\n",
              "      <th>Nivel_ANAL</th>\n",
              "      <th>Nivel_ASIS</th>\n",
              "      <th>Nivel_AUXI</th>\n",
              "      <th>Nivel_COOR</th>\n",
              "      <th>...</th>\n",
              "      <th>Nivel_GERE</th>\n",
              "      <th>Nivel_JEFE</th>\n",
              "      <th>Nivel_OPER</th>\n",
              "      <th>Nivel_SENA</th>\n",
              "      <th>Nivel_VICE</th>\n",
              "      <th>Nivel_coor</th>\n",
              "      <th>Porcentaje apoyo_0</th>\n",
              "      <th>Porcentaje apoyo_30</th>\n",
              "      <th>Porcentaje apoyo_90</th>\n",
              "      <th>Porcentaje apoyo_100</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>2021-01-03</td>\n",
              "      <td>ALMUERZO</td>\n",
              "      <td>3486</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2021-01-03</td>\n",
              "      <td>ALMUERZO</td>\n",
              "      <td>3486</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>2021-01-03</td>\n",
              "      <td>ALMUERZO</td>\n",
              "      <td>3486</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>2021-01-03</td>\n",
              "      <td>ALMUERZO</td>\n",
              "      <td>3486</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>2021-01-03</td>\n",
              "      <td>ALMUERZO</td>\n",
              "      <td>3486</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>875441</th>\n",
              "      <td>2024-03-20</td>\n",
              "      <td>ALMUERZO</td>\n",
              "      <td>3839</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>875442</th>\n",
              "      <td>2024-03-21</td>\n",
              "      <td>ALMUERZO</td>\n",
              "      <td>3837</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>875443</th>\n",
              "      <td>2024-03-22</td>\n",
              "      <td>ALMUERZO</td>\n",
              "      <td>3836</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>875444</th>\n",
              "      <td>2024-03-26</td>\n",
              "      <td>ALMUERZO</td>\n",
              "      <td>3834</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>875445</th>\n",
              "      <td>2024-03-27</td>\n",
              "      <td>ALMUERZO</td>\n",
              "      <td>3833</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>523884 rows × 21 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c5419eea-eaa6-418b-8734-fc86c29882b4')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-c5419eea-eaa6-418b-8734-fc86c29882b4 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-c5419eea-eaa6-418b-8734-fc86c29882b4');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-5d611c81-031c-406e-bd0f-fa1b41b8c877\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-5d611c81-031c-406e-bd0f-fa1b41b8c877')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-5d611c81-031c-406e-bd0f-fa1b41b8c877 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "  <div id=\"id_5e99410b-630f-4f1c-a64e-81ecb9e1b7f0\">\n",
              "    <style>\n",
              "      .colab-df-generate {\n",
              "        background-color: #E8F0FE;\n",
              "        border: none;\n",
              "        border-radius: 50%;\n",
              "        cursor: pointer;\n",
              "        display: none;\n",
              "        fill: #1967D2;\n",
              "        height: 32px;\n",
              "        padding: 0 0 0 0;\n",
              "        width: 32px;\n",
              "      }\n",
              "\n",
              "      .colab-df-generate:hover {\n",
              "        background-color: #E2EBFA;\n",
              "        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "        fill: #174EA6;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate {\n",
              "        background-color: #3B4455;\n",
              "        fill: #D2E3FC;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate:hover {\n",
              "        background-color: #434B5C;\n",
              "        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "        fill: #FFFFFF;\n",
              "      }\n",
              "    </style>\n",
              "    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('dfCasinoAlmuerzosCodificado')\"\n",
              "            title=\"Generate code using this dataframe.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "    <script>\n",
              "      (() => {\n",
              "      const buttonEl =\n",
              "        document.querySelector('#id_5e99410b-630f-4f1c-a64e-81ecb9e1b7f0 button.colab-df-generate');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      buttonEl.onclick = () => {\n",
              "        google.colab.notebook.generateWithVariable('dfCasinoAlmuerzosCodificado');\n",
              "      }\n",
              "      })();\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "dfCasinoAlmuerzosCodificado"
            }
          },
          "metadata": {},
          "execution_count": 54
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#visualización de la serie vs total de almuerzos\n",
        "grouped = dfCasinoAlmuerzosCodificado.groupby('Fecha Consumo').agg({ 'Detalle': 'count'})\n",
        "\n",
        "fig, ax=plt.subplots(figsize=(7, 3))\n",
        "grouped.plot(ax=ax, label='Detalle')\n",
        "\n",
        "ax.set_title('Consumo Almuerzos')\n",
        "ax.legend();"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 333
        },
        "id": "wj2nkzVSC695",
        "outputId": "a16fc482-ab6b-4973-fb2c-350533681798"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 700x300 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "\n",
        "# Aplicar la transformación Box-Cox sobre total de consumo almuerzo por fecha\n",
        "grouped['consumo_transformado'], lambda_value = boxcox(grouped['Detalle'])\n",
        "\n",
        "# Visualizar la distribución transformada\n",
        "plt.figure(figsize=(6, 4))\n",
        "plt.hist(grouped['consumo_transformado'], bins=30, edgecolor='k')\n",
        "plt.title('Distribución del Consumo Después de la Transformación Box-Cox')\n",
        "plt.xlabel('Consumo Transformado')\n",
        "plt.ylabel('Frecuencia')\n",
        "plt.show()\n",
        "\n",
        "# Imprimir el valor de lambda utilizado en la transformación\n",
        "print('Valor de lambda:', lambda_value)"
      ],
      "metadata": {
        "id": "mpk8roHw-6-l",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 428
        },
        "outputId": "c23433de-8c3e-42a5-d720-de9deb28b1cf"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 600x400 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Valor de lambda: 1.0496006228518013\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "👣 Al obtener un valor lamba mayor que 1, no se necesita una transformación, por lo tanto es equivalente la transformacion al utilizar los datos originales. A continuacion, trataremos el tema de la varianza no constante que puede indicar que la serie no es estacionaria, aspecto clave para el modelo que deseamos implementar, para ellos nos apoyaremos en las técnicas Dickey-Fuller Aumentada (ADF) y en la prueba de Kwiatkowki-Phillips-Schmidt-Shin (KPSS) para evaluar si hay indicios o ausencia de esta estacionalidad."
      ],
      "metadata": {
        "id": "QAtLt5_ME6ZH"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "warnings.filterwarnings(\"ignore\")\n",
        "\n",
        "diferencial_1 = grouped.diff().dropna()\n",
        "diferencial_2 = diferencial_1.diff().dropna()\n",
        "\n",
        "print('Test estacionariedad serie sin diferenciación')\n",
        "resultado_adfuller = adfuller(grouped)\n",
        "resultado_kpss = kpss(grouped)\n",
        "print(f'ADF Statistic: {resultado_adfuller[0]}, p-value: {resultado_adfuller[1]}')\n",
        "print(f'KPSS Statistic: {resultado_kpss[0]}, p-value: {resultado_kpss[1]}')\n",
        "\n",
        "print('\\nTest estacionariedadserie diferenciación de orden 1')\n",
        "resultado_adfuller = adfuller(diferencial_1)\n",
        "resultado_kpss = kpss(grouped.diff().dropna())\n",
        "print(f'ADF Statistic: {resultado_adfuller[0]}, p-value: {resultado_adfuller[1]}')\n",
        "print(f'KPSS Statistic: {resultado_kpss[0]}, p-value: {resultado_kpss[1]}')\n",
        "\n",
        "fig, axs = plt.subplots(nrows=2, ncols=1, figsize=(7, 5), sharex=True)\n",
        "grouped.plot(ax=axs[0], title='Serie original')\n",
        "diferencial_1.plot(ax=axs[1], title='Diferenciación orden 1')\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 608
        },
        "id": "GxwXxmIlJlZn",
        "outputId": "06bce89a-4db5-4f4c-f72a-b13e101825ea"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Test estacionariedad serie sin diferenciación\n",
            "ADF Statistic: -3.4731656202966716, p-value: 0.008703602748095377\n",
            "KPSS Statistic: 1.1755548738439585, p-value: 0.01\n",
            "\n",
            "Test estacionariedadserie diferenciación de orden 1\n",
            "ADF Statistic: -7.795825761398471, p-value: 7.722846250700548e-12\n",
            "KPSS Statistic: 0.07477478068387071, p-value: 0.1\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<Axes: title={'center': 'Diferenciación orden 1'}, xlabel='Fecha Consumo'>"
            ]
          },
          "metadata": {},
          "execution_count": 77
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 700x500 with 2 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "👣 En el ejercicio obtenemos un valor de diferenciación superior a 0.005 que es el umbral ampliamente reconocido y aceptado, por lo que se entiende que la serie no es estacionaria, se intenta un diferencia del orden 1 pero aun permanece el valor superior al umbral, por lo tanto se debe encontrar el valor de difernecia para futuro modelo de la serie."
      ],
      "metadata": {
        "id": "2EUVCrd6QG26"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# Grafico de autocorrelación para la serie original y la serie diferenciada\n",
        "# ==============================================================================\n",
        "fig, axs = plt.subplots(nrows=2, ncols=1, figsize=(7, 4), sharex=True)\n",
        "plot_acf(grouped, ax=axs[0], lags=50, alpha=0.05)\n",
        "axs[0].set_title('Autocorrelación serie original')\n",
        "plot_acf(diferencial_1, ax=axs[1], lags=50, alpha=0.05)\n",
        "axs[1].set_title('Autocorrelación serie diferenciada (order=1)');"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 391
        },
        "id": "Z3FX2kvHSEV3",
        "outputId": "301b9eab-30d3-4df7-b5ee-db763c09fbaa"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 700x400 with 2 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "👣 El estudio de las correlaciones indica presencia de estacionalidad ciclica o presencia de patrones temporales que se repiten anualmente. Por lo tanto es otra indicación de que se necesita realizar la diferenciación para encontrar los parametros optimos para el modelamiento."
      ],
      "metadata": {
        "id": "0JZpoOHISodR"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "---\n",
        "<center> ⏭ Operaciones para la selección adecuada de las variables, con el fin de optimizar el uso de recursos y reducir la complejidad del modelo se utilizó el metódo de Matriz de Correlación.</center>\n",
        "\n",
        "---"
      ],
      "metadata": {
        "id": "B5xwCHihQ4D5"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "##🔎 **Matriz de Correlación**\n",
        "#### Nombres de las variables y cantidad de datos nulos o vacios cargados en el DataFrame"
      ],
      "metadata": {
        "id": "gNqIbFdRq08L"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# Mostrar las variables y la cantidad de datos nulos o vacios\n",
        "print(\"**********************************************\")\n",
        "print(\"Variables del dataset y cantidad de datos nulos o vacíos:\")\n",
        "print(\"**********************************************\")\n",
        "print(dfCasinoConsumoOriginal.isnull().sum())\n",
        "print(\"**********************************************\")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "8k9wKbFiq63B",
        "outputId": "35a3cad5-0f5d-4845-d96d-d85b5250d53a"
      },
      "execution_count": 31,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "**********************************************\n",
            "Variables del dataset y cantidad de datos nulos o vacíos:\n",
            "**********************************************\n",
            "Consecutivo                   0\n",
            "IdProducto                47786\n",
            "cod lector                    0\n",
            "Cod comedor                   0\n",
            "Identificacion persona        0\n",
            "Fecha Consumo                 0\n",
            "Detalle                       0\n",
            "Nro empleados                 0\n",
            "Tipo Empleado                 0\n",
            "Nivel                         0\n",
            "Porcentaje apoyo              0\n",
            "Invitado                      0\n",
            "Ing x planta                  0\n",
            "dtype: int64\n",
            "**********************************************\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "#### Se utiliza la Moda para imputar los datos vacios del Dataframe de la variable IdProducto, en total eran 47.786 datos nulos"
      ],
      "metadata": {
        "id": "0ZgQdribq_dV"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# Calculamos la moda de la columna 'IdProducto'\n",
        "moda_id_producto = dfCasinoConsumoOriginal['IdProducto'].mode()[0]\n",
        "\n",
        "# Imputamos los valores nulos con la moda\n",
        "dfCasinoConsumoOriginal['IdProducto'].fillna(moda_id_producto, inplace=True)\n",
        "\n",
        "# Verificación: contar cuántos valores nulos quedan después de la imputación\n",
        "print(\"**********************************************\")\n",
        "print(\"Valores nulos en 'IdProducto' después de la imputación:\", dfCasinoConsumoOriginal['IdProducto'].isnull().sum())\n",
        "\n",
        "# Mostrar las variables y la cantidad de datos nulos o vacios\n",
        "print(\"**********************************************\")\n",
        "print(\"Variables del dataset y cantidad de datos nulos o vacíos:\")\n",
        "print(\"**********************************************\")\n",
        "print(dfCasinoConsumoOriginal.isnull().sum())\n",
        "print(\"**********************************************\")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "JgIEXRKzrAVG",
        "outputId": "317b1628-6aa5-4a3b-d0db-e417e9686d8a"
      },
      "execution_count": 32,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "**********************************************\n",
            "Valores nulos en 'IdProducto' después de la imputación: 0\n",
            "**********************************************\n",
            "Variables del dataset y cantidad de datos nulos o vacíos:\n",
            "**********************************************\n",
            "Consecutivo               0\n",
            "IdProducto                0\n",
            "cod lector                0\n",
            "Cod comedor               0\n",
            "Identificacion persona    0\n",
            "Fecha Consumo             0\n",
            "Detalle                   0\n",
            "Nro empleados             0\n",
            "Tipo Empleado             0\n",
            "Nivel                     0\n",
            "Porcentaje apoyo          0\n",
            "Invitado                  0\n",
            "Ing x planta              0\n",
            "dtype: int64\n",
            "**********************************************\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "### Ya no tenemos datos vacios o nulos en el conjunto de datos, por lo cual continuamos con la preparación de los datos y el analísis de Matriz de correlación"
      ],
      "metadata": {
        "id": "0bfwj-MbrP6B"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# --------------------------------------\n",
        "# Preparación de los datos\n",
        "# --------------------------------------\n",
        "\n",
        "# Convertir la columna 'Fecha Consumo' a tipo datetime con el formato correcto\n",
        "dfCasinoConsumoOriginal['Fecha Consumo'] = pd.to_datetime(dfCasinoConsumoOriginal['Fecha Consumo'], format='%d/%m/%Y', errors='coerce')\n",
        "\n",
        "# Extraer el día de la semana (lunes=0, domingo=6)\n",
        "dfCasinoConsumoOriginal['Dia de la semana'] = dfCasinoConsumoOriginal['Fecha Consumo'].dt.dayofweek\n",
        "\n",
        "# Convertir a mayúsculas y filtrar para conservar solo las filas donde 'Detalle' es 'ALMUERZO'\n",
        "dfCasinoConsumoOriginal['Detalle'] = dfCasinoConsumoOriginal['Detalle'].str.upper()\n",
        "dfCasinoConsumoOriginal = dfCasinoConsumoOriginal[dfCasinoConsumoOriginal['Detalle'] == 'ALMUERZO'].copy()\n",
        "\n",
        "# Conversión de variables categóricas a códigos numéricos\n",
        "dfCasinoConsumoOriginal['Tipo Empleado'] = pd.Categorical(dfCasinoConsumoOriginal['Tipo Empleado']).codes\n",
        "dfCasinoConsumoOriginal['Nivel'] = pd.Categorical(dfCasinoConsumoOriginal['Nivel']).codes\n",
        "dfCasinoConsumoOriginal['Porcentaje apoyo'] = pd.Categorical(dfCasinoConsumoOriginal['Porcentaje apoyo']).codes\n",
        "\n",
        "# Asegurarse que 'Nro empleados' es numérico\n",
        "dfCasinoConsumoOriginal['Nro empleados'] = pd.to_numeric(dfCasinoConsumoOriginal['Nro empleados'], errors='coerce')\n",
        "\n",
        "# Conteo de almuerzos por 'Día de la semana'\n",
        "dfCasinoConsumoOriginal['Conteo Almuerzos'] = 1\n",
        "almuerzos_por_dia = dfCasinoConsumoOriginal.groupby('Dia de la semana')['Conteo Almuerzos'].sum().rename('Número de Almuerzos_total_x_dia')\n",
        "\n",
        "# Unir el total de almuerzos por día al DataFrame original\n",
        "dfCasinoConsumoOriginal = dfCasinoConsumoOriginal.join(almuerzos_por_dia, on='Dia de la semana')"
      ],
      "metadata": {
        "id": "SMYe-LP8rQq5"
      },
      "execution_count": 33,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# Mostrar los datos únicos y cantidades de estas variables\n",
        "# Dia de la semana, Conteo Almuerzos, Número de Almuerzos_total_x_dia\n",
        "\n",
        "print(\"**********************************************\")\n",
        "print(\"Datos únicos y cantidades de las variables:\")\n",
        "print(\"**********************************************\")\n",
        "\n",
        "print(\"Día de la semana:\")\n",
        "print(dfCasinoConsumoOriginal['Dia de la semana'].value_counts().sort_index(ascending=True))\n",
        "# Calcular el total de almuerzos\n",
        "total_almuerzos = dfCasinoConsumoOriginal['Dia de la semana'].value_counts().sort_index()\n",
        "print(\"Total Almuerzos:\", total_almuerzos.sum())\n",
        "print(\"**********************************************\")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "eLZNnYQarg0J",
        "outputId": "4c1c270e-b7f4-4058-aeb2-2c14b68ef382"
      },
      "execution_count": 34,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "**********************************************\n",
            "Datos únicos y cantidades de las variables:\n",
            "**********************************************\n",
            "Día de la semana:\n",
            "Dia de la semana\n",
            "0    79702\n",
            "1    87416\n",
            "2    89937\n",
            "3    89364\n",
            "4    85337\n",
            "5    55375\n",
            "6    36754\n",
            "Name: count, dtype: int64\n",
            "Total Almuerzos: 523885\n",
            "**********************************************\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "### Se corroborá que las sumatorias del consumo de almuerzos por día (Lunes=0, ..., Domingo=6) según el código en Python sea igual a la sumatoria para corroborar en Tableau según la imagen, obviamente con el filtro de Detalle = ALMUERZO. Las cifras son correctas."
      ],
      "metadata": {
        "id": "zcA1n1FIrk7Z"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "img = mpimg.imread('Sumatoria en Tableau de Almuerzos x Día.png')\n",
        "plt.imshow(img)\n",
        "plt.axis('off')\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 213
        },
        "id": "84oceL1Drl3k",
        "outputId": "a672472a-a8fb-4d16-83a0-e36b026542d3"
      },
      "execution_count": 35,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Crear la matriz de correlación\n",
        "columns_for_correlation = ['Número de Almuerzos_total_x_dia', 'Consecutivo', 'IdProducto', 'cod lector', 'Cod comedor',\n",
        "                           'Identificacion persona', 'Dia de la semana', 'Nro empleados', 'Tipo Empleado',\n",
        "                           'Nivel', 'Porcentaje apoyo', 'Invitado', 'Ing x planta']\n",
        "correlation_matrix = dfCasinoConsumoOriginal[columns_for_correlation].corr()\n",
        "\n",
        "# Visualización de la matriz de correlación\n",
        "plt.figure(figsize=(10, 9))\n",
        "sns.heatmap(correlation_matrix, annot=True, cmap='coolwarm', fmt=\".2f\")\n",
        "plt.title('Primera Matriz de Correlación')\n",
        "plt.xticks(rotation=90)\n",
        "plt.yticks(rotation=0)\n",
        "plt.tight_layout()\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 907
        },
        "id": "LUksx0bMrxjx",
        "outputId": "30da2312-347d-49b1-ac8d-38fa384c2dd5"
      },
      "execution_count": 36,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x900 with 2 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "print(\"*****************************************************************************************************************\")\n",
        "print(f\"Ahora el DataFrame contiene {len(dfCasinoConsumoOriginal):,.2f} registros, dado que se Filtro en donde Detalle' es 'ALMUERZO'\")\n",
        "print(\"*****************************************************************************************************************\")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "s2XBgL83sj8O",
        "outputId": "6c8c683d-b2ad-45d6-f564-947f4b699a9c"
      },
      "execution_count": 37,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "*****************************************************************************************************************\n",
            "Ahora el DataFrame contiene 523,885.00 registros, dado que se Filtro en donde Detalle' es 'ALMUERZO'\n",
            "*****************************************************************************************************************\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "---\n",
        "#####🔎 Al calcular y gráficar la **Primera Matriz de Correlación** se concluye que se deberán eliminar las siguientes variables de acuerdo con los siguientes análisis y conclusiones:\n",
        "*   **Consecutivo:** Esta variable es un identificador único para cada registro en la base de datos, por lo cual no muestra una correlación significativa con las otras variables del dataset, excepto con *Porcentaje de apoyo*, finalmente esta variable no aportaría en la predicción del modelo.\n",
        "*  **IdProducto:** No mostró ningún valor de correlación con las demás variables, al ser un identificador de producto, esta variable no es relevante para predecir el número de almuerzos a adquirir diariamente.\n",
        "*  **cod lector:** Esta variable presenta un comportamiento similar a la variable \"Consecutivo\". Almacena el código del dispositivo de lectura del carnet, y efectivamente tampoco aportará al modelo predictivo a desarrollar.\n",
        "*  **Cod comedor:** Esta variabla almacena el código asignado al comedor dentro de la instalación (Ubicación) y dado que el modelo predictivo no requiere la diferenciación por ubicación o localización, se debe omitir. Adicionalmente, la variable no presentó algún valor de correlación con las demás variables.\n",
        "*  **Identificacion persona:** Esta variable es otro identificador que no tiene relevancia predictiva directa para el total de almuerzos.\n",
        "*  **Detalle:** Esta variable no muestra correlaciones en la imagen y no será adecuada para la construcción del modelo. No obstantes a partir de esta variable se filtró el DataFrame para conservar solo las filas donde 'Detalle' es **'ALMUERZO'**, disminuyendo el número total de registros de 884.615 a 523.885.\n",
        "*  **Invitado:** No mostró ningún valor de correlación con las demás variables, esta variable no es relevante para predecir el número de almuerzos a adquirir diariamente. Esta variable indica sí el consumidor es invitado en la empresa y adicionalmente esta variable solo almacena el valor '0' en todos los registros.\n",
        "*  **Ing x planta:** No mostró ningún valor de correlación con las demás variables, esta variable no es relevante para predecir el número de almuerzos a adquirir diariamente. Esta variable indica sí el consumidor si el consumo se realzia en las instalaciones de la empresa y adicionalmente esta variable solo almacena el valor '1' en todos los registros.\n",
        "\n",
        "#####Las variables \"Invitado\" y \"Ing x planta\" no tiene variación, dado que todos los valores son 0 o todos son 1, debido a esto, no se puede calcular una correlación estándar. La correlación requiere que haya alguna variabilidad en ambas variables que se están comparando.\n",
        "\n",
        "#####Por lo anterior se sugieren eliminar estas variables y correr una Segunda Matriz de Correlación para continuar con la Ingenieria de Carácteristicas.\n",
        "---"
      ],
      "metadata": {
        "id": "GCbWz3D3tihZ"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# Crear la matriz de correlación\n",
        "columns_for_correlation = ['Número de Almuerzos_total_x_dia', 'Dia de la semana', 'Nro empleados',\n",
        "                           'Tipo Empleado', 'Nivel', 'Porcentaje apoyo']\n",
        "correlation_matrix = dfCasinoConsumoOriginal[columns_for_correlation].corr()\n",
        "\n",
        "# Visualización de la matriz de correlación\n",
        "plt.figure(figsize=(10, 9))\n",
        "sns.heatmap(correlation_matrix, annot=True, cmap='coolwarm', fmt=\".2f\")\n",
        "plt.title('Segunda Matriz de Correlación')\n",
        "plt.xticks(rotation=90)\n",
        "plt.yticks(rotation=0)\n",
        "plt.tight_layout()\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 907
        },
        "id": "cbkguD38tjzZ",
        "outputId": "79c7111b-5ee4-4b33-9d13-c820bbbd1370"
      },
      "execution_count": 38,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x900 with 2 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "---\n",
        "#####🔎 Algunas de las conclusiones obtenidas al calcular la **Segunda Matriz de Correlación** entre las variables dependiente e independientes, fuerón:\n",
        "*   La correlación entre **Número de Almuerzos y Día de la Semana (-0.63)**:\n",
        "Esta correlación negativa fuerte sugiere que hay una relación inversa entre el número de almuerzos consumidos y el día de la semana. Específicamente, a medida que avanza la semana (de lunes=0 a domingo=6), el número de almuerzos consumidos tiende a disminuir. Esta información podría ser útil para la planificación del número de almuerzos a adquirir, sugiriendo una posible disminución en la demanda de almuerzos hacia el final de la semana.\n",
        "*   La variable **Detalle** almacena el tipo de comida así: ALMUERZO, CENA, COMIDA, DESAYUNO, MERIENDA AM, MERIENDA PM, REFRIGE PM, REFRIGERIO ESPECIAL PM, y dado que se requiere obtener las cantidades correctas para el servicio de almuerzo del personal y así contribuir a que se reduzca considerablemente el  desperdicio de alimentos en la empresa, se opta por Filtrar el DataFrame para conservar solo las filas donde 'Detalle' es 'ALMUERZO'. De igual manera se observo en la correlación con todos los datos de **la variable Detalle no tenía una incidencia en la correlación, si no que sus valores fueron muy bajos**, por ello se procede a eliminarla de la correlación.\n",
        "*   Existe una fuerte correlación positiva entre el **Tipo de empleado y su Nivel jerárquico (0.71)**. Esto sugiere que las categorías de empleados están alineadas o son dependientes de los niveles jerárquicos dentro de la organización.\n",
        "*    **Correlación de 0.23 entre 'Nivel' y 'Porcentaje apoyo':** Esta correlación positiva moderada sugiere que existe alguna relación entre el nivel jerárquico del empleado y el porcentaje de apoyo que reciben para los almuerzos. Aunque esta relación no es tan fuerte como otras observadas en la matriz.\n",
        "*    Hay una correlación moderada (0.39) entre el **Tipo Empleado** y el **Porcentaje apoyo** que reciben para los almuerzos. Esto puede indicar que diferentes tipos de empleados reciben diferentes niveles de subsidios para las comida, lo cual puede influir en su decisión de almorzar en el comedor de la empresa.\n",
        "*   Las bajas correlaciones entre el número de empleados y las otras variables, indican que simplemente **más empleados activos en la fecha del consumo no garantiza un aumento o disminución proporcional en el uso del comedor**, lo que sugiere que otros factores contextuales o personales están en juego.\n",
        "---"
      ],
      "metadata": {
        "id": "NsmPpc-tty-a"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "**Conclusiones de la fase de \"Preparación de los datos\" en el contexto de la metodología CRISP-ML.**\n"
      ],
      "metadata": {
        "id": "tt3r4j2zjGVU"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "👣 Durante todo el proceso de preparación de datos realizamos pasos críticos para los cuales la correcta ejecución aseguran en un gran porcentaje el éxito de un modelo de machine learning, desde la limpieza de datos (relleno, eliminación de datos, identificación de outliers), la selección de las características relevantes (con correlación aceptada para el modelo) y la ingeniería de características (transformación de los datos), aseguran el mejoramiento de los datos de entrada al sistema con el objetivo de buscar el mejor desempeño del modelo. Identificamos la importancia de conocer el negocio raíz del problema, ya que la interpretación de los datos y sobre todo los valores atípicos, podrían ser entendidos con este conocimiento.\n",
        "Resaltamos el enfoque sistemático que nos brinda la metodología CRISP-ML, dado que en las fases realizadas hemos podido generar una secuencia de actividades relacionadas que aseguran el éxito de proyecto, en la fase de comprensión del negocio pudimos ver la necesidad puntual de los usuarios, identificando los pain points del proceso actual. Luego, durante la fase de preparación de los datos aseguramos darle la calidad necesaria a los mismos que se necesitan para la entrada al modelo.\n",
        "Creemos que con las etapas realizadas y continuando con las siguientes sugeridas según la metodología, estaríamos siendo muy cuidadosos en la búsqueda de maximizar las probabilidades de éxito del proyecto.\n"
      ],
      "metadata": {
        "id": "OA6NnpySjB_M"
      }
    }
  ]
}